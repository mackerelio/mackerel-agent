//go:build windows

package cmdutil

import (
	"bytes"
	"testing"
)

func TestDecodeBytesWindows(t *testing.T) {
	tests := []struct {
		in   []byte
		want string
	}{
		{
			in:   []byte("ユーティーエフエイト"),
			want: "ユーティーエフエイト",
		},
		{
			in:   []byte{0x83, 0x56, 0x83, 0x74, 0x83, 0x67, 0x4a, 0x49, 0x53},
			want: string([]byte{0x83, 0x56, 0x83, 0x74, 0x83, 0x67, 0x4a, 0x49, 0x53}),
		},
		{
			in:   []byte("'deadbeef' は、内部コマンドまたは外部コマンド、\r\n操作可能なプログラムまたはバッチ ファイルとして認識されていません。\r\n"),
			want: "'deadbeef' は、内部コマンドまたは外部コマンド、\r\n操作可能なプログラムまたはバッチ ファイルとして認識されていません。\r\n",
		},
		{
			in: []byte{
				0x27, 0x00, 0x64, 0x00, 0x65, 0x00, 0x61, 0x00, 0x64, 0x00,
				0x62, 0x00, 0x65, 0x00, 0x65, 0x00, 0x66, 0x00, 0x27, 0x00,
				0x20, 0x00, 0x6f, 0x30, 0x01, 0x30, 0x85, 0x51, 0xe8, 0x90,
				0xb3, 0x30, 0xde, 0x30, 0xf3, 0x30, 0xc9, 0x30, 0x7e, 0x30,
				0x5f, 0x30, 0x6f, 0x30, 0x16, 0x59, 0xe8, 0x90, 0xb3, 0x30,
				0xde, 0x30, 0xf3, 0x30, 0xc9, 0x30, 0x01, 0x30, 0x0d, 0x00,
				0x0a, 0x00, 0xcd, 0x64, 0x5c, 0x4f, 0xef, 0x53, 0xfd, 0x80,
				0x6a, 0x30, 0xd7, 0x30, 0xed, 0x30, 0xb0, 0x30, 0xe9, 0x30,
				0xe0, 0x30, 0x7e, 0x30, 0x5f, 0x30, 0x6f, 0x30, 0xd0, 0x30,
				0xc3, 0x30, 0xc1, 0x30, 0x20, 0x00, 0xd5, 0x30, 0xa1, 0x30,
				0xa4, 0x30, 0xeb, 0x30, 0x68, 0x30, 0x57, 0x30, 0x66, 0x30,
				0x8d, 0x8a, 0x58, 0x8b, 0x55, 0x30, 0x8c, 0x30, 0x66, 0x30,
				0x44, 0x30, 0x7e, 0x30, 0x5b, 0x30, 0x93, 0x30, 0x02, 0x30,
				0x0d, 0x00, 0x0a, 0x00,
			},
			want: "'deadbeef' は、内部コマンドまたは外部コマンド、\r\n操作可能なプログラムまたはバッチ ファイルとして認識されていません。\r\n",
		},
	}
	for _, test := range tests {
		var buf bytes.Buffer
		buf.Write([]byte(test.in))
		got := decodeBytes(&buf)
		if string(got) != test.want {
			t.Fatalf("decodeBytes: want %v but got %v", test.want, string(got))
		}
	}
}
